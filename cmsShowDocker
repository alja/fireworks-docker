#!/bin/bash

realpath ()
{
    f=$@;
    if [ -d "$f" ]; then
        base="";
        dir="$f";
    else
        base="/$(basename "$f")";
        dir=$(dirname "$f");
    fi;
    dir=$(cd "$dir" && /bin/pwd);
    echo "$dir$base"
}

# Setting up X11 forwarding which utilizes local wifi
echo "-----------------------"
IP=$(ifconfig en0 | grep inet | awk '$1=="inet" {print $2}')
echo "Your IP is set to:" $IP
/opt/X11/bin/xhost + $IP # For Mac OSX Catalina the XQuartz xhost is not in $PATH so full path is needed

IMAGEVERSION=9.4.1-v2
IMAGE=sgnoohc/fireworks:${IMAGEVERSION}

# Building commandline
CMD="docker run \
    -it \
    --rm \
    --name fw${IMAGEVERSION} \
    -e DISPLAY=$IP:0 \
    -e XAUTHORITY=/.Xauthority \
    --net host \
    -v ${HOME}/.Xauthority:/.Xauthority"

# Assumption: any root file that is being passed to the ./cmsShow has .root
# Parse the option lines and search for any root files that was pointed in relative path
# Then get the fullpath and mount it on the docker container
# Also update any relative path argument to point to the fullpath
# Any other option lines are carried over as is
NEWARGS=""
echo "-----------------------"
for ARG in $*; do
    if [ -f $ARG ] && [[ $ARG == *".root"* ]]; then
        # If it is a root file and it exists, you mount it on docker container as a full path
        FULLPATH=$(realpath $ARG)
        CMD="${CMD} -v ${FULLPATH}:${FULLPATH}"
        echo "Mounting: ${FULLPATH}"
        # Also update the argument as a fullpath
        NEWARGS="${NEWARGS} ${FULLPATH}"
    else
        # If everything else, just carry over the argument that was passed over
        NEWARGS="${NEWARGS} ${ARG}"
    fi
done

CMD="${CMD} ${IMAGE} $NEWARGS"

# Printing out full docker command used
echo "-----------------------"
echo "Running docker command:"
echo $CMD
echo "-----------------------"
echo "Run Docker Container!"
echo "..."
echo "..."
echo "..."
$CMD
